import streamlit as st

def berechne_exit_option(inputs, df):
    exit_jahr = inputs["exit_nach"]
    if exit_jahr > len(df):
        st.warning("Exit-Zeitpunkt liegt auÃŸerhalb der Finanzierungsdauer.")
        return

    # Immobilienwert mit Wertsteigerung
    immowert_exit = inputs["kaufpreis"] * (1 + inputs["annahme_wertsteigerung"] / 100) ** exit_jahr

    # Inflation bereinigt
    realwert_exit = immowert_exit / (1 + inputs["annahme_inflation"] / 100) ** exit_jahr

    # Restschuld zu dem Zeitpunkt
    restschuld_exit = df.loc[df["Jahr"] == exit_jahr, "Restschuld"].values[0]

    # Steuerersparnis bei steuerfreiem Verkauf (angenommen: 25 % Steuer auf Gewinn, ohne FreibetrÃ¤ge etc.)
    hypothetische_steuer = (immowert_exit - inputs["kaufpreis"]) * 0.25 if exit_jahr < 10 else 0

    # NettoerlÃ¶s
    nettogewinn = immowert_exit - restschuld_exit

    # Return on Equity (ROE)
    roe = (nettogewinn - inputs["eigenkapital"]) / inputs["eigenkapital"] if inputs["eigenkapital"] > 0 else 0

    st.subheader(f"ğŸ“¤ Exit nach {exit_jahr} Jahren")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("ğŸ“ˆ Immobilienwert (Exit)", f"{immowert_exit:,.0f} â‚¬")
        st.metric("ğŸ’¸ Steuerersparnis", f"{hypothetische_steuer:,.0f} â‚¬")
    with col2:
        st.metric("ğŸ“‰ Restschuld", f"{restschuld_exit:,.0f} â‚¬")
        st.metric("ğŸ“Š Wert in heutiger Kaufkraft", f"{realwert_exit:,.0f} â‚¬")
    with col3:
        st.metric("ğŸ’° Gewinn nach Kredit", f"{nettogewinn:,.0f} â‚¬")
        st.metric("ğŸ“ˆ ROE", f"{roe*100:.1f} %")

    return {
        "immowert_exit": immowert_exit,
        "restschuld_exit": restschuld_exit,
        "nettogewinn": nettogewinn,
        "steuerersparnis": hypothetische_steuer,
        "roe": roe
    }
